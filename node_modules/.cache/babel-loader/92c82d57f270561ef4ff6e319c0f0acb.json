{"ast":null,"code":"var _jsxFileName = \"/home/atestee/Desktop/BP-sandbox/leaflet-demo/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { React, Component, useEffect, useState } from 'react';\nimport L from 'leaflet';\nimport boundary from './geojson/population.geojson';\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { JobManagerPicker } from \"./components/JobManagerPicker\";\nimport { CityPicker } from \"./components/CityPicker\";\nimport { Start } from \"./components/Start\";\nimport { LinePicker } from \"./components/LinePicker\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ndelete L.Icon.Default.prototype._getIconUrl;\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: require('./images/marker-icon-2x.png'),\n  iconUrl: require('./images/marker-icon.png'),\n  shadowUrl: require('./images/marker-shadow.png')\n});\nexport class App extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            element: /*#__PURE__*/_jsxDEV(Start, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 50\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/city-picker\",\n            element: /*#__PURE__*/_jsxDEV(CityPicker, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 61\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/link-picker\",\n            element: /*#__PURE__*/_jsxDEV(LinkPicker, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 61\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/job-management\",\n            element: /*#__PURE__*/_jsxDEV(JobManagerPicker, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 64\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this); // return <div id={\"map\"}></div>;\n  }\n\n}\n\nfunction Map() {\n  _s();\n\n  useEffect(() => {\n    console.log(boundary);\n    let map = L.map('map', {\n      center: [50.07501157760184, 14.416865286199549],\n      zoom: 13,\n      layers: [L.tileLayer('https://stamen-tiles.a.ssl.fastly.net/{id}/{z}/{x}/{y}.png', {\n        attribution: 'Map tiles by <a href=\"http://stamen.com\">Stamen Design</a>, under <a href=\"http://creativecommons.org/licenses/by/3.0\">CC BY 3.0</a>. Data by <a href=\"http://openstreetmap.org\">OpenStreetMap</a>, under <a href=\"http://www.openstreetmap.org/copyright\">ODbL</a>.',\n        maxZoom: 15,\n        id: 'toner-lite',\n        tileSize: 512,\n        zoomOffset: -1\n      })],\n      preferCanvas: true\n    });\n    let myStyle = {\n      radius: 3,\n      fillColor: \"rgba(243,225,5,0.76)\",\n      color: \"rgba(243,225,5,0.76)\",\n      weight: 1,\n      opacity: 0.1,\n      fillOpacity: 0.8\n    };\n    L.geoJSON(boundary, {\n      pointToLayer: function (feature, latlng) {\n        return L.circleMarker(latlng, myStyle);\n      }\n    }).addTo(map);\n    console.log(map);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"map\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 12\n  }, this);\n}\n\n_s(Map, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Map;\n\nvar _c;\n\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"sources":["/home/atestee/Desktop/BP-sandbox/leaflet-demo/src/App.js"],"names":["React","Component","useEffect","useState","L","boundary","BrowserRouter","Router","Routes","Route","JobManagerPicker","CityPicker","Start","LinePicker","Icon","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","require","iconUrl","shadowUrl","App","render","Map","console","log","map","center","zoom","layers","tileLayer","attribution","maxZoom","id","tileSize","zoomOffset","preferCanvas","myStyle","radius","fillColor","color","weight","opacity","fillOpacity","geoJSON","pointToLayer","feature","latlng","circleMarker","addTo"],"mappings":"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","sourcesContent":["import {React, Component, useEffect, useState} from 'react';\nimport L from 'leaflet';\nimport boundary from './geojson/population.geojson';\nimport {\n    BrowserRouter as Router,\n    Routes,\n    Route,\n} from \"react-router-dom\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport {JobManagerPicker} from \"./components/JobManagerPicker\";\nimport {CityPicker} from \"./components/CityPicker\";\nimport {Start} from \"./components/Start\";\nimport {LinePicker} from \"./components/LinePicker\";\n\n\ndelete L.Icon.Default.prototype._getIconUrl;\n\nL.Icon.Default.mergeOptions({\n    iconRetinaUrl: require('./images/marker-icon-2x.png'),\n    iconUrl: require('./images/marker-icon.png'),\n    shadowUrl: require('./images/marker-shadow.png')\n});\n\n\nexport class App extends Component {\n    render () {\n        return (\n            <Router>\n                <div>\n                    {/* A <Switch> looks through its children <Route>s and\n            renders the first one that matches the current URL. */}\n                    <Routes>\n                        <Route path=\"/\" element={<Start />}/>\n                        <Route path=\"/city-picker\" element={<CityPicker />}/>\n                        <Route path=\"/link-picker\" element={<LinkPicker />}/>\n                        <Route path=\"/job-management\" element={<JobManagerPicker />}/>\n                    </Routes>\n                </div>\n            </Router>\n        )\n        // return <div id={\"map\"}></div>;\n    }\n\n}\n\nfunction Map() {\n    useEffect(() => {\n        console.log(boundary)\n        let map = L.map('map', {\n            center: [50.07501157760184, 14.416865286199549],\n            zoom: 13,\n            layers: [\n                L.tileLayer('https://stamen-tiles.a.ssl.fastly.net/{id}/{z}/{x}/{y}.png', {\n                    attribution: 'Map tiles by <a href=\"http://stamen.com\">Stamen Design</a>, under <a href=\"http://creativecommons.org/licenses/by/3.0\">CC BY 3.0</a>. Data by <a href=\"http://openstreetmap.org\">OpenStreetMap</a>, under <a href=\"http://www.openstreetmap.org/copyright\">ODbL</a>.',\n                    maxZoom: 15,\n                    id: 'toner-lite',\n                    tileSize: 512,\n                    zoomOffset: -1\n                }),\n            ],\n            preferCanvas: true\n        });\n\n        let myStyle = {\n            radius : 3,\n            fillColor : \"rgba(243,225,5,0.76)\",\n            color : \"rgba(243,225,5,0.76)\",\n            weight : 1,\n            opacity : 0.1,\n            fillOpacity : 0.8\n        };\n\n        L.geoJSON(boundary, {\n            pointToLayer: function (feature, latlng) {\n                return L.circleMarker(latlng, myStyle);\n            }\n        }).addTo(map);\n        console.log(map);\n    });\n\n    return <div id={\"map\"}></div>;\n}\n\n"]},"metadata":{},"sourceType":"module"}