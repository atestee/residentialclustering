{"ast":null,"code":"var _jsxFileName = \"/home/atestee/Desktop/BP/leaflet-demo/src/components/LinkPicker.js\",\n    _s = $RefreshSig$();\n\nimport { React, useState } from \"react\";\nimport { Accordion, AccordionDetails, AccordionSummary, Typography } from \"@mui/material\";\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport './LinkPicker.css';\nimport routes from \"../data/links.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function LinkPicker() {\n  _s();\n\n  const [isCheckAll, setIsCheckAll] = useState(false);\n  const [isCheck, setIsCheck] = useState([]);\n  const [list, setList] = useState([]);\n  let routeTypesGrouped = {};\n  Object.keys(routes).map(t => routeTypesGrouped[t] = Object.keys(routes[t]));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"mainDiv\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      class: \"header\",\n      children: \"Route picker\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"divWithAccordions\",\n      children: Object.keys(routeTypesGrouped).map(routeTypeName => /*#__PURE__*/_jsxDEV(Accordion, {\n        class: \"accordion\",\n        style: {\n          backgroundColor: \"lightgray\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(AccordionSummary, {\n          expandIcon: /*#__PURE__*/_jsxDEV(ExpandMoreIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 45\n          }, this),\n          \"aria-controls\": \"panel1a-content\",\n          id: \"panel1a-header\",\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            class: \"accordionName\",\n            children: routeTypeName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(AccordionDetails, {\n          class: \"accordionDetails\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              style: {\n                marginBottom: `10px`\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 38\n            }, this), \" Select All\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"rowCheckboxes\",\n            children: Object.values(routeTypesGrouped[routeTypeName]).map(l => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"columnCheckboxes\",\n              children: [l, \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 34,\n                columnNumber: 83\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 45\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"column\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n}\n\n_s(LinkPicker, \"cHmInYZ8XZ6QMKyjjmUWP2CHxsQ=\");\n\n_c = LinkPicker;\n\nvar _c;\n\n$RefreshReg$(_c, \"LinkPicker\");","map":{"version":3,"sources":["/home/atestee/Desktop/BP/leaflet-demo/src/components/LinkPicker.js"],"names":["React","useState","Accordion","AccordionDetails","AccordionSummary","Typography","ExpandMoreIcon","routes","LinkPicker","isCheckAll","setIsCheckAll","isCheck","setIsCheck","list","setList","routeTypesGrouped","Object","keys","map","t","routeTypeName","backgroundColor","marginBottom","values","l"],"mappings":";;;AAAA,SAAQA,KAAR,EAAeC,QAAf,QAA8B,OAA9B;AACA,SAAQC,SAAR,EAAmBC,gBAAnB,EAAqCC,gBAArC,EAAuDC,UAAvD,QAAwE,eAAxE;AACA,OAAOC,cAAP,MAA2B,gCAA3B;AACA,OAAO,kBAAP;AACA,OAAOC,MAAP,MAAmB,oBAAnB;;AAEA,OAAO,SAASC,UAAT,GAAsB;AAAA;;AACzB,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BT,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAM,CAACU,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACY,IAAD,EAAOC,OAAP,IAAkBb,QAAQ,CAAC,EAAD,CAAhC;AAEA,MAAIc,iBAAiB,GAAG,EAAxB;AACAC,EAAAA,MAAM,CAACC,IAAP,CAAYV,MAAZ,EAAoBW,GAApB,CAAyBC,CAAD,IAAOJ,iBAAiB,CAACI,CAAD,CAAjB,GAAuBH,MAAM,CAACC,IAAP,CAAYV,MAAM,CAACY,CAAD,CAAlB,CAAtD;AAEA,sBACI;AAAK,IAAA,KAAK,EAAC,SAAX;AAAA,4BACI;AAAI,MAAA,KAAK,EAAC,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,KAAK,EAAC,mBAAX;AAAA,gBAEQH,MAAM,CAACC,IAAP,CAAYF,iBAAZ,EAA+BG,GAA/B,CAAoCE,aAAD,iBAC/B,QAAC,SAAD;AAAW,QAAA,KAAK,EAAC,WAAjB;AAA6B,QAAA,KAAK,EAAE;AAAEC,UAAAA,eAAe,EAAE;AAAnB,SAApC;AAAA,gCACI,QAAC,gBAAD;AACI,UAAA,UAAU,eAAE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,kBADhB;AAEI,2BAAc,iBAFlB;AAGI,UAAA,EAAE,EAAC,gBAHP;AAAA,iCAKI,QAAC,UAAD;AAAY,YAAA,KAAK,EAAC,eAAlB;AAAA,sBAAmCD;AAAnC;AAAA;AAAA;AAAA;AAAA;AALJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAQI,QAAC,gBAAD;AAAkB,UAAA,KAAK,EAAC,kBAAxB;AAAA,kCACI;AAAA,oCAAK;AAAO,cAAA,IAAI,EAAC,UAAZ;AAAuB,cAAA,KAAK,EAAG;AAAEE,gBAAAA,YAAY,EAAG;AAAjB;AAA/B;AAAA;AAAA;AAAA;AAAA,oBAAL;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAK,YAAA,KAAK,EAAC,eAAX;AAAA,sBAEQN,MAAM,CAACO,MAAP,CAAcR,iBAAiB,CAACK,aAAD,CAA/B,EAAgDF,GAAhD,CAAqDM,CAAD,iBAChD;AAAK,cAAA,SAAS,EAAC,kBAAf;AAAA,yBAAmCA,CAAnC,oBAAsC;AAAO,gBAAA,IAAI,EAAE;AAAb;AAAA;AAAA;AAAA;AAAA,sBAAtC;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ;AAFR;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBARJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AAFR;AAAA;AAAA;AAAA;AAAA,YAFJ,eA2BI;AAAK,MAAA,KAAK,EAAC;AAAX;AAAA;AAAA;AAAA;AAAA,YA3BJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAmCH;;GA3CehB,U;;KAAAA,U","sourcesContent":["import {React, useState} from \"react\";\nimport {Accordion, AccordionDetails, AccordionSummary, Typography} from \"@mui/material\";\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport './LinkPicker.css'\nimport routes from \"../data/links.json\"\n\nexport function LinkPicker() {\n    const [isCheckAll, setIsCheckAll] = useState(false);\n    const [isCheck, setIsCheck] = useState([]);\n    const [list, setList] = useState([]);\n\n    let routeTypesGrouped = {};\n    Object.keys(routes).map((t) => routeTypesGrouped[t] = Object.keys(routes[t]));\n\n    return (\n        <div class=\"mainDiv\">\n            <h2 class=\"header\">Route picker</h2>\n            <div class=\"divWithAccordions\">\n                {\n                    Object.keys(routeTypesGrouped).map((routeTypeName) => (\n                        <Accordion class=\"accordion\" style={{ backgroundColor: \"lightgray\"}}>\n                            <AccordionSummary\n                                expandIcon={<ExpandMoreIcon />}\n                                aria-controls=\"panel1a-content\"\n                                id=\"panel1a-header\"\n                            >\n                                <Typography class=\"accordionName\">{routeTypeName}</Typography>\n                            </AccordionSummary>\n                            <AccordionDetails class=\"accordionDetails\">\n                                <div><input type=\"checkbox\" style={ { marginBottom: `10px`}}/> Select All</div>\n                                <div class=\"rowCheckboxes\">\n                                    {\n                                        Object.values(routeTypesGrouped[routeTypeName]).map((l) => (\n                                            <div className=\"columnCheckboxes\">{l} <input type={\"checkbox\"}/></div>\n                                        ))\n                                    }\n                                </div>\n                            </AccordionDetails>\n                        </Accordion>\n                    ))\n                }\n            </div>\n            <div class=\"column\">\n\n            </div>\n        </div>\n    );\n\n\n}"]},"metadata":{},"sourceType":"module"}