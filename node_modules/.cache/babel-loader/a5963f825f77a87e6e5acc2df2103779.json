{"ast":null,"code":"var _jsxFileName = \"/home/atestee/Desktop/BP/leaflet-demo/src/components/LinkPicker.js\",\n    _s = $RefreshSig$();\n\nimport { React, useEffect, useState } from \"react\";\nimport { Accordion, AccordionDetails, AccordionSummary, Checkbox, Typography } from \"@mui/material\";\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport './LinkPicker.css';\nimport routes from \"../data/links.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function LinkPicker() {\n  _s();\n\n  let routeTypesGrouped = {};\n  Object.keys(routes).map(t => routeTypesGrouped[t] = Object.keys(routes[t]));\n  const [isCheckAll, setIsCheckAll] = useState({\n    \"tram\": false,\n    \"metro\": false,\n    \"bus\": false,\n    \"funicular\": false\n  });\n  const [isCheck, setIsCheck] = useState({\n    \"tram\": [],\n    \"metro\": [],\n    \"bus\": [],\n    \"funicular\": []\n  });\n  const [list, setList] = useState([]);\n  useEffect(() => {\n    setList(Catalogues);\n  }, [list]);\n\n  function handleSelectAllClick(routeTypeName) {}\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"mainDiv\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      class: \"header\",\n      children: \"Route picker\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"divWithAccordions\",\n      children: Object.keys(routeTypesGrouped).map(routeTypeName => /*#__PURE__*/_jsxDEV(Accordion, {\n        class: \"accordion\",\n        style: {\n          backgroundColor: \"lightgray\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(AccordionSummary, {\n          expandIcon: /*#__PURE__*/_jsxDEV(ExpandMoreIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 45\n          }, this),\n          \"aria-controls\": \"panel1a-content\",\n          id: \"panel1a-header\",\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            class: \"accordionName\",\n            children: routeTypeName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(AccordionDetails, {\n          class: \"accordionDetails\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n              style: {\n                padding: 0\n              },\n              onClick: () => handleSelectAllClick(routeTypeName)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 38\n            }, this), \" Select All\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"rowCheckboxes\",\n            children: Object.values(routeTypesGrouped[routeTypeName]).map(l => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"columnCheckboxes\",\n              children: [l, \" \", /*#__PURE__*/_jsxDEV(Checkbox, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 83\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 45\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"column\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n}\n\n_s(LinkPicker, \"zCjdOMy0XIollQc48KUQWLTyvXY=\");\n\n_c = LinkPicker;\n\nvar _c;\n\n$RefreshReg$(_c, \"LinkPicker\");","map":{"version":3,"sources":["/home/atestee/Desktop/BP/leaflet-demo/src/components/LinkPicker.js"],"names":["React","useEffect","useState","Accordion","AccordionDetails","AccordionSummary","Checkbox","Typography","ExpandMoreIcon","routes","LinkPicker","routeTypesGrouped","Object","keys","map","t","isCheckAll","setIsCheckAll","isCheck","setIsCheck","list","setList","Catalogues","handleSelectAllClick","routeTypeName","backgroundColor","padding","values","l"],"mappings":"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","sourcesContent":["import {React, useEffect, useState} from \"react\";\nimport {Accordion, AccordionDetails, AccordionSummary, Checkbox, Typography} from \"@mui/material\";\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport './LinkPicker.css'\nimport routes from \"../data/links.json\"\n\nexport function LinkPicker() {\n    let routeTypesGrouped = {};\n    Object.keys(routes).map((t) => routeTypesGrouped[t] = Object.keys(routes[t]));\n\n    const [isCheckAll, setIsCheckAll] = useState({\n        \"tram\": false,\n        \"metro\": false,\n        \"bus\": false,\n        \"funicular\": false\n    });\n\n    const [isCheck, setIsCheck] = useState({\n        \"tram\": [],\n        \"metro\": [],\n        \"bus\": [],\n        \"funicular\": []\n    });\n\n    const [list, setList] = useState([]);\n\n    useEffect(() => {\n        setList(Catalogues);\n    }, [list]);\n\n    function handleSelectAllClick(routeTypeName) {\n\n    }\n\n    return (\n        <div class=\"mainDiv\">\n            <h2 class=\"header\">Route picker</h2>\n            <div class=\"divWithAccordions\">\n                {\n                    Object.keys(routeTypesGrouped).map((routeTypeName) => (\n                        <Accordion class=\"accordion\" style={{ backgroundColor: \"lightgray\"}}>\n                            <AccordionSummary\n                                expandIcon={<ExpandMoreIcon />}\n                                aria-controls=\"panel1a-content\"\n                                id=\"panel1a-header\"\n                            >\n                                <Typography class=\"accordionName\">{routeTypeName}</Typography>\n                            </AccordionSummary>\n                            <AccordionDetails class=\"accordionDetails\">\n                                <div><Checkbox style={{ padding: 0}} onClick={() => handleSelectAllClick(routeTypeName)}/> Select All</div>\n                                <div class=\"rowCheckboxes\">\n                                    {\n                                        Object.values(routeTypesGrouped[routeTypeName]).map((l) => (\n                                            <div className=\"columnCheckboxes\">{l} <Checkbox/></div>\n                                        ))\n                                    }\n                                </div>\n                            </AccordionDetails>\n                        </Accordion>\n                    ))\n                }\n            </div>\n            <div class=\"column\">\n\n            </div>\n        </div>\n    );\n\n\n}"]},"metadata":{},"sourceType":"module"}